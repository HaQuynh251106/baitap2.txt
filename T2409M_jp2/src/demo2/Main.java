package demo2;

import dao.ResultDAO;
import entity.Result;
import factory.DAOFactory;

import java.util.List;
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        ResultDAO resultDAO = DAOFactory.getResultDAO();
        Scanner scanner = new Scanner(System.in);

        while (true) {
            System.out.println("\n----- QU·∫¢N L√ù K·∫æT QU·∫¢ THI -----");
            System.out.println("1. Th√™m k·∫øt qu·∫£");
            System.out.println("2. Xem k·∫øt qu·∫£ theo ID");
            System.out.println("3. C·∫≠p nh·∫≠t k·∫øt qu·∫£");
            System.out.println("4. Xo√° k·∫øt qu·∫£");
            System.out.println("5. Hi·ªÉn th·ªã t·∫•t c·∫£ k·∫øt qu·∫£");
            System.out.println("0. Tho√°t");
            System.out.print("Ch·ªçn ch·ª©c nƒÉng: ");
            int choice = Integer.parseInt(scanner.nextLine());

            switch (choice) {
                case 1 -> {
                    System.out.print("Nh·∫≠p ƒëi·ªÉm: ");
                    double mark = Double.parseDouble(scanner.nextLine());
                    System.out.print("Nh·∫≠p student_id: ");
                    int studentId = Integer.parseInt(scanner.nextLine());
                    System.out.print("Nh·∫≠p subject_id: ");
                    int subjectId = Integer.parseInt(scanner.nextLine());
                    Result newResult = new Result(mark, studentId, subjectId);
                    boolean created = resultDAO.create(newResult);
                    System.out.println(created ? "‚úÖ Th√™m th√†nh c√¥ng!" : "‚ùå Th√™m th·∫•t b·∫°i.");
                }

                case 2 -> {
                    System.out.print("Nh·∫≠p ID k·∫øt qu·∫£ c·∫ßn xem: ");
                    int id = Integer.parseInt(scanner.nextLine());
                    Result result = resultDAO.read(id);
                    System.out.println(result != null ? result : "‚ùå Kh√¥ng t√¨m th·∫•y k·∫øt qu·∫£.");
                }

                case 3 -> {
                    System.out.print("Nh·∫≠p ID k·∫øt qu·∫£ c·∫ßn c·∫≠p nh·∫≠t: ");
                    int id = Integer.parseInt(scanner.nextLine());
                    Result existing = resultDAO.read(id);
                    if (existing == null) {
                        System.out.println("‚ùå Kh√¥ng t√¨m th·∫•y k·∫øt qu·∫£.");
                        break;
                    }
                    System.out.print("ƒêi·ªÉm m·ªõi: ");
                    double mark = Double.parseDouble(scanner.nextLine());
                    System.out.print("Student ID m·ªõi: ");
                    int studentId = Integer.parseInt(scanner.nextLine());
                    System.out.print("Subject ID m·ªõi: ");
                    int subjectId = Integer.parseInt(scanner.nextLine());
                    Result updated = new Result(id, mark, studentId, subjectId);
                    boolean success = resultDAO.update(updated);
                    System.out.println(success ? "‚úÖ C·∫≠p nh·∫≠t th√†nh c√¥ng!" : "‚ùå C·∫≠p nh·∫≠t th·∫•t b·∫°i.");
                }

                case 4 -> {
                    System.out.print("Nh·∫≠p ID k·∫øt qu·∫£ c·∫ßn xo√°: ");
                    int id = Integer.parseInt(scanner.nextLine());
                    boolean deleted = resultDAO.delete(id);
                    System.out.println(deleted ? "‚úÖ Xo√° th√†nh c√¥ng!" : "‚ùå Xo√° th·∫•t b·∫°i.");
                }

                case 5 -> {
                    List<Result> results = resultDAO.getAll();
                    System.out.println("===== DANH S√ÅCH K·∫æT QU·∫¢ =====");
                    for (Result r : results) {
                        System.out.println(r);
                    }
                }

                case 0 -> {
                    System.out.println("üëã Tho√°t ch∆∞∆°ng tr√¨nh.");
                    return;
                }

                default -> System.out.println("‚ùó L·ª±a ch·ªçn kh√¥ng h·ª£p l·ªá.");
            }
        }
    }
}
